(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

// querySelector
// document.querySelector("subtract");
// document.querySelector("multiply");
// document.querySelector("divide");

document.querySelector("#add").addEventListener("click", function () {
  var firstNumber = document.querySelector("#numberOne").value;
  var secondNumber = document.querySelector("#numberTwo").value;
  // add numbers together
  var total = Number(firstNumber) + Number(secondNumber);
  // change answer to be the result
  document.querySelector("#answer").innerHTML = total;
});

document.querySelector("#subtract").addEventListener("click", function () {
  var firstNumber = document.querySelector("#numberOne").value;
  var secondNumber = document.querySelector("#numberTwo").value;
  // add numbers together
  var total = Number(firstNumber) - Number(secondNumber);
  // change answer to be the result
  document.querySelector("#answer").innerHTML = total;
});

document.querySelector("#multiply").addEventListener("click", function () {
  var firstNumber = document.querySelector("#numberOne").value;
  var secondNumber = document.querySelector("#numberTwo").value;
  // add numbers together
  var total = Number(firstNumber) * Number(secondNumber);
  // change answer to be the result
  document.querySelector("#answer").innerHTML = total;
});

document.querySelector("#divide").addEventListener("click", function () {
  var firstNumber = document.querySelector("#numberOne").value;
  var secondNumber = document.querySelector("#numberTwo").value;
  // add numbers together
  var total = Number(firstNumber) / Number(secondNumber);
  // change answer to be the result
  document.querySelector("#answer").innerHTML = total;
});

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJhcHAvYXBwLmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7OztBQ0tBLFNBQ0csYUFESCxDQUNpQixNQURqQixFQUVHLGdCQUZILENBRW9CLE9BRnBCLEVBRTZCLFlBQVc7QUFDcEMsTUFBSSxjQUFjLFNBQVMsYUFBVCxDQUF1QixZQUF2QixFQUFxQyxLQUFyQyxDQURrQjtBQUVwQyxNQUFJLGVBQWUsU0FBUyxhQUFULENBQXVCLFlBQXZCLEVBQXFDLEtBQXJDOztBQUZpQixNQUloQyxRQUFRLE9BQU8sV0FBUCxJQUFzQixPQUFPLFlBQVAsQ0FBdEI7O0FBSndCLFVBTXBDLENBQVMsYUFBVCxDQUF1QixTQUF2QixFQUFrQyxTQUFsQyxHQUE4QyxLQUE5QyxDQU5vQztDQUFYLENBRjdCOztBQVdFLFNBQ0csYUFESCxDQUNpQixXQURqQixFQUVHLGdCQUZILENBRW9CLE9BRnBCLEVBRTZCLFlBQVc7QUFDcEMsTUFBSSxjQUFjLFNBQVMsYUFBVCxDQUF1QixZQUF2QixFQUFxQyxLQUFyQyxDQURrQjtBQUVwQyxNQUFJLGVBQWUsU0FBUyxhQUFULENBQXVCLFlBQXZCLEVBQXFDLEtBQXJDOztBQUZpQixNQUloQyxRQUFRLE9BQU8sV0FBUCxJQUFzQixPQUFPLFlBQVAsQ0FBdEI7O0FBSndCLFVBTXBDLENBQVMsYUFBVCxDQUF1QixTQUF2QixFQUFrQyxTQUFsQyxHQUE4QyxLQUE5QyxDQU5vQztDQUFYLENBRjdCOztBQVdFLFNBQ0csYUFESCxDQUNpQixXQURqQixFQUVHLGdCQUZILENBRW9CLE9BRnBCLEVBRTZCLFlBQVc7QUFDcEMsTUFBSSxjQUFjLFNBQVMsYUFBVCxDQUF1QixZQUF2QixFQUFxQyxLQUFyQyxDQURrQjtBQUVwQyxNQUFJLGVBQWUsU0FBUyxhQUFULENBQXVCLFlBQXZCLEVBQXFDLEtBQXJDOztBQUZpQixNQUloQyxRQUFRLE9BQU8sV0FBUCxJQUFzQixPQUFPLFlBQVAsQ0FBdEI7O0FBSndCLFVBTXBDLENBQVMsYUFBVCxDQUF1QixTQUF2QixFQUFrQyxTQUFsQyxHQUE4QyxLQUE5QyxDQU5vQztDQUFYLENBRjdCOztBQVdFLFNBQ0csYUFESCxDQUNpQixTQURqQixFQUVHLGdCQUZILENBRW9CLE9BRnBCLEVBRTZCLFlBQVc7QUFDcEMsTUFBSSxjQUFjLFNBQVMsYUFBVCxDQUF1QixZQUF2QixFQUFxQyxLQUFyQyxDQURrQjtBQUVwQyxNQUFJLGVBQWUsU0FBUyxhQUFULENBQXVCLFlBQXZCLEVBQXFDLEtBQXJDOztBQUZpQixNQUloQyxRQUFRLE9BQU8sV0FBUCxJQUFzQixPQUFPLFlBQVAsQ0FBdEI7O0FBSndCLFVBTXBDLENBQVMsYUFBVCxDQUF1QixTQUF2QixFQUFrQyxTQUFsQyxHQUE4QyxLQUE5QyxDQU5vQztDQUFYLENBRjdCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsIi8vIHF1ZXJ5U2VsZWN0b3Jcbi8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJzdWJ0cmFjdFwiKTtcbi8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtdWx0aXBseVwiKTtcbi8vIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJkaXZpZGVcIik7XG5cbmRvY3VtZW50XG4gIC5xdWVyeVNlbGVjdG9yKFwiI2FkZFwiKVxuICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgIHZhciBmaXJzdE51bWJlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbnVtYmVyT25lXCIpLnZhbHVlO1xuICAgIHZhciBzZWNvbmROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlclR3b1wiKS52YWx1ZTtcbiAgICAvLyBhZGQgbnVtYmVycyB0b2dldGhlclxuICAgIHZhciB0b3RhbCA9IE51bWJlcihmaXJzdE51bWJlcikgKyBOdW1iZXIoc2Vjb25kTnVtYmVyKTtcbiAgICAvLyBjaGFuZ2UgYW5zd2VyIHRvIGJlIHRoZSByZXN1bHRcbiAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fuc3dlclwiKS5pbm5lckhUTUwgPSB0b3RhbDtcbiAgfSk7XG5cbiAgZG9jdW1lbnRcbiAgICAucXVlcnlTZWxlY3RvcihcIiNzdWJ0cmFjdFwiKVxuICAgIC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgZmlyc3ROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlck9uZVwiKS52YWx1ZTtcbiAgICAgIHZhciBzZWNvbmROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlclR3b1wiKS52YWx1ZTtcbiAgICAgIC8vIGFkZCBudW1iZXJzIHRvZ2V0aGVyXG4gICAgICB2YXIgdG90YWwgPSBOdW1iZXIoZmlyc3ROdW1iZXIpIC0gTnVtYmVyKHNlY29uZE51bWJlcik7XG4gICAgICAvLyBjaGFuZ2UgYW5zd2VyIHRvIGJlIHRoZSByZXN1bHRcbiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjYW5zd2VyXCIpLmlubmVySFRNTCA9IHRvdGFsO1xuICAgIH0pO1xuXG4gICAgZG9jdW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiI211bHRpcGx5XCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uKCkge1xuICAgICAgICB2YXIgZmlyc3ROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlck9uZVwiKS52YWx1ZTtcbiAgICAgICAgdmFyIHNlY29uZE51bWJlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbnVtYmVyVHdvXCIpLnZhbHVlO1xuICAgICAgICAvLyBhZGQgbnVtYmVycyB0b2dldGhlclxuICAgICAgICB2YXIgdG90YWwgPSBOdW1iZXIoZmlyc3ROdW1iZXIpICogTnVtYmVyKHNlY29uZE51bWJlcik7XG4gICAgICAgIC8vIGNoYW5nZSBhbnN3ZXIgdG8gYmUgdGhlIHJlc3VsdFxuICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2Fuc3dlclwiKS5pbm5lckhUTUwgPSB0b3RhbDtcbiAgICAgIH0pO1xuXG4gICAgICBkb2N1bWVudFxuICAgICAgICAucXVlcnlTZWxlY3RvcihcIiNkaXZpZGVcIilcbiAgICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2YXIgZmlyc3ROdW1iZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI251bWJlck9uZVwiKS52YWx1ZTtcbiAgICAgICAgICB2YXIgc2Vjb25kTnVtYmVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNudW1iZXJUd29cIikudmFsdWU7XG4gICAgICAgICAgLy8gYWRkIG51bWJlcnMgdG9nZXRoZXJcbiAgICAgICAgICB2YXIgdG90YWwgPSBOdW1iZXIoZmlyc3ROdW1iZXIpIC8gTnVtYmVyKHNlY29uZE51bWJlcik7XG4gICAgICAgICAgLy8gY2hhbmdlIGFuc3dlciB0byBiZSB0aGUgcmVzdWx0XG4gICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhbnN3ZXJcIikuaW5uZXJIVE1MID0gdG90YWw7XG4gICAgICAgIH0pO1xuIl19
